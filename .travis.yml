language: cpp
compiler: gcc

# This section uses a rather esoteric (and tricky!) feature of YAML,
# &aliases and *anchors, to build package lists out of sublists without
# repeating their contents. Basically, '&name' creates an alias for the
# given data, which can then be referenced using the anchor '*name'.
addons:
  apt:
    packages: &p_common  # Packages common to all Ubuntu builds
    - cmake
    - swig
    - libopenshot-audio-dev
    - libmagick++-dev
    - libunittest++-dev
    - libzmq3-dev
    - qtbase5-dev
    - qtmultimedia5-dev
    - doxygen
    - graphviz
    - curl
    - jq
    packages: &ff_common  # Common set of FFmpeg packages
    - *p_common
    - libfdk-aac-dev
    - libavcodec-dev
    - libavformat-dev
    - libavdevice-dev
    - libavutil-dev
    - libavfilter-dev
    - libswscale-dev
    - libpostproc-dev
    - libavresample-dev
    - libswresample-dev

matrix:

  include:
    - name: "FFmpeg 2 GCC (Ubuntu 16.04 Xenial)"
      env:
        - BUILD_VERSION=ffmpeg2
        - CMAKE_EXTRA_ARGS=""
        - TEST_TARGET="os_test"
      os: linux
      dist: xenial
      addons:
        apt:
          sources:
          - sourceline: 'ppa:openshot.developers/libopenshot-daily'
          - sourceline: 'ppa:beineri/opt-qt-5.10.0-xenial'
          packages:
          - *ff_common

    - name: "FFmpeg 3 GCC (Ubuntu 18.04 Bionic)"
      env:
        - BUILD_VERSION=ffmpeg3
        - CMAKE_EXTRA_ARGS=""
        - TEST_TARGET=test
      os: linux
      dist: bionic
      addons:
        apt:
          sources:
          - sourceline: 'ppa:openshot.developers/libopenshot-daily'
          - sourceline: 'ppa:beineri/opt-qt-5.12.3-bionic'
          packages:
          - *ff_common
          - qt5-default

    - name: "FFmpeg 4 GCC (Ubuntu 18.04 Bionic)"
      env:
        - BUILD_VERSION=ffmpeg4
        - CMAKE_EXTRA_ARGS=""
        - TEST_TARGET=test
      os: linux
      dist: bionic
      addons:
        apt:
          sources:
          - sourceline: 'ppa:openshot.developers/libopenshot-daily'
          - sourceline: 'ppa:beineri/opt-qt-5.12.3-bionic'
          - sourceline: 'ppa:jonathonf/ffmpeg-4'
          packages:
          - *ff_common
          - qt5-default
          - libavcodec58
          - libavformat58
          - libavdevice58
          - libavutil56
          - libavfilter7
          - libswscale5
          - libpostproc55
          - libavresample4
          - libswresample3

    - name: "FFmpeg 3 Clang (Ubuntu 18.04 Bionic)"
      env:
        - BUILD_VERSION=clang_ffmpeg3
        - CMAKE_EXTRA_ARGS=""
        - TEST_TARGET=test
      os: linux
      dist: bionic
      compiler: clang
      addons:
        apt:
          sources:
          - sourceline: 'ppa:openshot.developers/libopenshot-daily'
          - sourceline: 'ppa:beineri/opt-qt-5.12.3-bionic'
          packages:
          - *ff_common
          - qt5-default
          - libomp-dev


    - name: "Coverage (Ubuntu 18.04 Bionic)"
      env:
        - BUILD_VERSION=coverage_ffmpeg3
        - CMAKE_EXTRA_ARGS="-DENABLE_COVERAGE=1"
        - TEST_TARGET=coverage
      os: linux
      dist: bionic
      addons:
        apt:
          sources:
          - sourceline: 'ppa:openshot.developers/libopenshot-daily'
          - sourceline: 'ppa:beineri/opt-qt-5.12.3-bionic'
          packages:
          - *ff_common
          - qt5-default
          - lcov
          - binutils-common # For c++filt

before_script:
  - CODACY_VERSION="$(curl -Ls https://api.bintray.com/packages/codacy/Binaries/codacy-coverage-reporter/versions/_latest | jq -r .name)"
  - if [ "x${TEST_TARGET}" = "xcoverage" ]; then curl -Ls -o codacy-coverage-reporter "https://dl.bintray.com/codacy/Binaries/${CODACY_VERSION}/codacy-coverage-reporter-linux"; chmod +x codacy-coverage-reporter; fi

script:
  - mkdir -p build; cd build;
  - cmake -DCMAKE_BUILD_TYPE:STRING="Debug" ${CMAKE_EXTRA_ARGS} ../
  - make VERBOSE=1
  - make ${TEST_TARGET}
  - make install DESTDIR="$BUILD_VERSION"
  - cd ..

after_success:
  - if [ "x${TEST_TARGET}" = "xcoverage" ]; then ./codacy-coverage-reporter report -l CPP -r build/coverage.info; fi
